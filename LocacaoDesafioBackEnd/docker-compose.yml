services:
  api:
    image: locacao-desafio-backend
    container_name: locacao-desafio-backend
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Mapeando porta 5000 do host para a 5000 do container
    depends_on:
      - rabbitmq
      - database  # Garantir que o serviço do banco seja inicializado antes
    environment:
      - ASPNETCORE_URLS=http://+:5000   
      - ASPNETCORE_ENVIRONMENT=Development    
      - ConnectionStrings__DefaultConnection=Host=database;Port=5432;Database=locacao_desafio;Username=postgres;Password=postgres
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest      

  database:
    image: postgres:latest
    container_name: locacaodatabase
    environment:
      - POSTGRES_DB=locacao_desafio
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres  
    volumes:
      - ./.containers/locacao-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 2s
      retries: 10
  
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Porta padrão do RabbitMQ
      - "15672:15672" # Porta do gerenciamento
